#!/bin/bash
#echo "Video Streaming for the Beaglebone - derekmolloy.ie"
#echo "Piping the output of capture to avconv"

# Next line not necessary if you are using my -F option on capture
#v4l2-ctl --set-fmt-video=width=1920,height=1080,pixelformat=1

# Pipe the output of capture into ffmpeg 
#raspivid "-o -"   Output the video (to be passed to avconv via pipe)
#	  "-t 0"  run for 0 seconds, which means infinite seconds in my program
# ffmpeg "-re" read input at the native frame rate
#        "-i -"  Take the input from the pipe
#	 "-vcodec copy" Do not transcode the video
# 	 "-f mpegts udp://192.168.1.238:1234/" Force mpegts to output to address of my PC on port 1234

#For use with raspberry pi camera module

#Laptop connection sharing
raspivid -o - -t 0 -rot 180 |ffmpeg -re -i - -vcodec copy -f mpegts udp://10.42.0.1:1234

#Switch connection
#raspivid -o - -t 0 -rot 180 |ffmpeg -re -i - -vcodec copy -f mpegts udp://192.168.1.238:1234


#raspivid -o - -t 0 |avconv -re -i - -vcodec copy -f mpegts udp://10.42.0.1:1234
#avconv would not work with the raspberry pi camera

#For use with logitech c920
#./capture -F -c0 -o|avconv -re -i - -vcodec copy -f mpegts udp:/10.42.0.1:1234
#./capture -F -c300 -o| socat - udp-sendto:192.168.0.100:1234

#nc -u 192.168.0.100 1234


#failed tests
#./capture -F -o -c0|avconv -re -i - -vcodec copy nc -u 192.168.0.100 1234
#./capture -F -o -c0|avconv -re -i - -vcodec copy -f mpegts|nc -u 192.168.0.100 1234
#./capture -F -o -c0|avconv -re -i - -vcodec copy -f mpegts > fifo2500
#cat fifo2500 | nc -u 192.168.0.100 1234

#./capture -F -o -c0 -f mpegts udp://192.168.0.100:1234
#nc -u 192.168.0.100 1234







